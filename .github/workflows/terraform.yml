name: Terraform CI/CD
'on':
  push:
    branches:
      - main
    paths:
      - terraform/environments/dev/**
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: Environment to target
        required: true
        default: dev
        type: choice
        options:
          - dev
          - prod
env:
  TF_VERSION: 1.6.6
  AWS_REGION: us-east-1
  TF_CLI_ARGS: '-no-color'
  TF_INPUT: 'false'
  JENKINS_PARAMS: |
    {
      "GIT_SHA": "${{ github.sha }}",
      "GIT_REF": "${{ github.ref }}",
      "ENVIRONMENT": "${{ github.event.inputs.environment || 'dev' }}",
    }
jobs:
  validate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env:
          - dev
          - prod
    steps:
      - uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - name: Terraform Init
        run: terraform init -backend-config=backend-${{ matrix.env }}.conf
        working-directory: terraform/environments/${{ matrix.env }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Terraform Validate
        run: terraform validate
        working-directory: terraform/environments/${{ matrix.env }}
  plan:
    needs: validate
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - name: Terraform Init
        run: terraform init -backend-config=backend-${{ github.event.inputs.environment
          || 'dev' }}.conf
        working-directory: terraform/environments/${{ github.event.inputs.environment || 'dev' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Terraform Plan
        run: terraform plan -out=plan.tfplan
        working-directory: terraform/environments/${{ github.event.inputs.environment || 'dev' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ github.sha }}-${{ github.event.inputs.environment || 'dev' }}
          path: terraform/environments/${{ github.event.inputs.environment || 'dev'
            }}/plan.tfplan
  notify:
    name: Notify Jenkins
    needs: plan
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    steps:
      - name: Trigger Jenkins Job
        run: |
          echo 'Triggering Jenkins with params:'
          echo '${{ env.JENKINS_PARAMS }}'

          curl -X POST \
            "${{ secrets.JENKINS_URL }}/generic-webhook-trigger/invoke?token=${{ secrets.TOKEN_JOB }}" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.JENKINS_TRIGGER_TOKEN }}" \
            -d '${{ env.JENKINS_PARAMS }}'